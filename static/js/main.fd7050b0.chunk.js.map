{"version":3,"sources":["components/Tabs/Tabs.jsx","App.jsx","index.jsx"],"names":["Tabs","_ref","tabs","selectedTabId","onTabSelected","correctTabId","map","tab","id","includes","visibleTab","find","_jsxs","children","_jsx","className","title","cn","href","concat","onClick","content","App","_useState","useState","_useState2","_slicedToArray","selectedTab","setSelectedTab","ReactDOM","render","document","getElementById"],"mappings":"8NAEaA,EAAO,SAAHC,GAIV,IAHLC,EAAID,EAAJC,KACAC,EAAaF,EAAbE,cACAC,EAAaH,EAAbG,cAEIC,EAAeF,EACPD,EAAKI,KAAI,SAAAC,GAAG,OAAIA,EAAIC,EAAE,IAEzBC,SAASJ,KAChBA,EAAeH,EAAK,GAAGM,IAGzB,IAAME,EAAaR,EAAKS,MAAK,SAAAJ,GAAG,OAAIA,EAAIC,KAAOH,CAAY,IAE3D,OACEO,eAAA,OAAK,UAAQ,gBAAeC,SAAA,CAC1BC,cAAA,OAAKC,UAAU,gBAAeF,SAC5BC,cAAA,MAAAD,SACGX,EAAKI,KAAI,SAACC,GACT,IAAQC,EAAcD,EAAdC,GAAIQ,EAAUT,EAAVS,MAEZ,OACEF,cAAA,MAEE,UAAQ,MACRC,UAAWE,IAAG,CACZ,YAAaT,IAAOH,IACnBQ,SAEHC,cAAA,KACEI,KAAI,IAAAC,OAAMX,GACV,UAAQ,UACRY,QAAS,kBACPf,IAAiBG,GAAMJ,EAAcG,EAAI,EACzCM,SAEDG,KAbER,EAiBX,QAIJM,cAAA,OAAKC,UAAU,QAAQ,UAAQ,aAAYF,SACxCH,EAAWW,YAIpB,EC7CanB,EAAO,CAClB,CAAEM,GAAI,QAASQ,MAAO,QAASK,QAAS,eACxC,CAAEb,GAAI,QAASQ,MAAO,QAASK,QAAS,eACxC,CAAEb,GAAI,QAASQ,MAAO,QAASK,QAAS,gBAG7BC,EAAM,WACjB,IAAAC,EAAsCC,mBAAStB,EAAK,IAAGuB,EAAAC,YAAAH,EAAA,GAAhDI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAElC,OACEb,eAAA,OAAKG,UAAU,UAASF,SAAA,CACtBC,cAAA,MAAIC,UAAU,QAAOF,SAAA,mBAAAM,OACCQ,EAAYX,SAGlCF,cAACd,EAAI,CACHE,KAAMA,EACNC,cAAewB,EAAYnB,GAC3BJ,cAAe,SAACG,GACdqB,EAAerB,EACjB,MAIR,EC3BAsB,IAASC,OAAOhB,cAACQ,EAAG,IAAKS,SAASC,eAAe,Q","file":"static/js/main.fd7050b0.chunk.js","sourcesContent":["import cn from 'classnames';\n\nexport const Tabs = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  let correctTabId = selectedTabId;\n  const ids = tabs.map(tab => tab.id);\n\n  if (!ids.includes(correctTabId)) {\n    correctTabId = tabs[0].id;\n  }\n\n  const visibleTab = tabs.find(tab => tab.id === correctTabId);\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => {\n            const { id, title } = tab;\n\n            return (\n              <li\n                key={id}\n                data-cy=\"Tab\"\n                className={cn({\n                  'is-active': id === correctTabId,\n                })}\n              >\n                <a\n                  href={`#${id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => (\n                    correctTabId !== id && onTabSelected(tab)\n                  )}\n                >\n                  {title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {visibleTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTab.id}\n        onTabSelected={(tab) => {\n          setSelectedTab(tab);\n        }}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}